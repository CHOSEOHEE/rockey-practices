MariaDB 설치 및 설정
1. 설치
작업 디렉토리 확인
# pwd
/root
의존 라이브러리 설치
# dnf install -y gcc gcc-c++ zlib* libxml* freetype* libpng* flex gmp ncurses-devel gnutls-devel libaio
iconv 소스 컴파일 설치
# wget https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.17.tar.gz
# tar xvfz libiconv-1.17.tar.gz
# cd libiconv-1.17
# ./configure --prefix=/usr/local
# make && make install
소스 다운로드
# wget https://downloads.mariadb.org/interstitial/mariadb-10.6.17/source/mariadb-10.6.17.tar.gz 
압축 풀기
# tar xvfz mariadb-10.6.17.tar.gz
소스 디렉토리 이동
# cd mariadb-10.6.17
빌드 환경 설정
# cmake -DCMAKE_INSTALL_PREFIX=/usr/local/bit2025/mariadb -DMYSQL_USER=mysql -DMYSQL_TCP_PORT=3306 -DMYSQL_DATADIR=/usr/local/bit2025/mariadb/data -DMYSQL_UNIX_ADDR=/usr/local/bit2025/mariadb/tmp/mariadb.sock -DINSTALL_SYSCONFDIR=/usr/local/bit2025/mariadb/etc -DINSTALL_SYSCONF2DIR=/usr/local/bit2025/mariadb/etc/my.cnf.d -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DWITH_ARIA_STORAGE_ENGINE=1 -DWITH_XTRADB_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_FEDERATEDX_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_SSL=bundled -DWITH_ZLIB=system
빌드 & 설치
# make && make install
2. 설정
설정 작업을 위해 root 홈디렉토리 이동
# cd 
# pwd
/root
실행 계정 생성
# groupadd mysql
# useradd -M -g mysql mysql 
mariadb 인스톨 디렉토리 소유자 변경
# chown -R mysql:mysql /usr/local/bit2025/mariadb
설정파일 위치 변경
# cp -R /usr/local/bit2025/mariadb/etc/my.cnf.d /etc
기본(관리) 데이터베이스(mysql) 생성
# /usr/local/bit2025/mariadb/scripts/mysql_install_db --user=mysql --basedir=/usr/local/bit2025/mariadb --defaults-file=/usr/local/bit2025/mariadb/etc/my.cnf --datadir=/usr/local/bit2025/mariadb/data
서버 구동
# /usr/local/bit2025/mariadb/bin/mysqld_safe &
root 패스워드 설정
# /usr/local/bit2025/mariadb/bin/mysqladmin -u root password '........'
데이터베이스 접속 테스트
# /usr/local/bit2025/mariadb/bin/mysql -u root -p
path 설정(/etc/profile)
# mysql
export PATH=$PATH:/usr/local/bit2025/mariadb/bin
서버 강제 종료
# ps -ef | grep mysql
root       865     1  0 16:23 ?        00:00:00 /bin/sh /usr/local/bit2025/mariadb/bin/mysqld_safe --datadir=/usr/local/bit2025/mariadb/data --pid-file=/usr/local/bit2025/mariadb/data/lx.bit2025.me.pid
mysql      968   865  0 16:23 ?        00:00:00 /usr/local/bit2025/mariadb/bin/mysqld --basedir=/usr/local/bit2025/mariadb --datadir=/usr/local/bit2025/mariadb/data --plugin-dir=/usr/local/bit2025/mariadb/lib/plugin --user=mysql --log-error=/usr/local/bit2025/mariadb/data/lx.bit2025.me.err --pid-file=/usr/local/bit2025/mariadb/data/lx.bit2025.me.pid
# kill -9 865 968
# ps -ef | grep mysql
3. 서비스 데몬 등록
mariadb systemd service script(/usr/lib/systemd/system/mariadb.service) 작성

서비스(데몬, Daemon) 등록/시작/중지

# systemctl enable mariadb.service
# systemctl start mariadb
# ps -ef | grep mysql
재부팅 후, mysql 클라이언트로 접속 테스트
# mysql -u root -p
password:
MariaDB [(none)]>
4. 데이터베이스 생성 및 사용자 인증/권한부여
DBA 권한 접속
# mysql -p;
webdb database 생성
MariaDB [none]> create database webdb;
local 접속 계정 webdb 생성
MariaDB [none]> create user 'webdb'@'localhost' identified by 'webdb';
MariaDB [none]> grant all privileges on webdb.* to 'webdb'@'localhost';
MariaDB [none]> flush privileges;
테스트
# mysql -u webdb -D webdb -p
특정 IP(예: windows 192.168.0.177)의 접속 계정 webdb 생성
MariaDB [none]> create user 'webdb'@'192.168.0.177' identified by 'webdb';
MariaDB [none]> grant all privileges on webdb.* to 'webdb'@'192.168.0.177';
MariaDB [none]> flush privileges;
windows의 Workbench로 연결 테스트
